{"version":3,"sources":["assets/images/image_1.png","assets/images/image_2.png","components/Thumbnail/Thumbnail.js","components/DraggableText/DraggableText.js","components/PosterViewer/PosterViewer.js","constants/resource.js","components/Button/Button.js","components/ButtonList/ButtonList.js","pages/PosterEditor.js","theme.js","App.js","index.js"],"names":["Image","styled","img","Thumbnail","onClick","src","defaultProps","TextContainer","div","EditableText","theme","colors","white","zoom","rotate","black","DraggableText","index","title","setActiveItem","bounds","contentEditable","suppressContentEditableWarning","Container","ImageContainer","ImageList","images","pic1","pic2","PosterViewer","texts","useState","activeImage","setActiveImage","map","i","staticText","BtnContainer","blue","Button","borderGrey","ButtonList","addText","zoomIn","zoomOut","actionButtons","PosterEditor","setTexts","activeItem","changeZoom","value","payload","length","prev","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0f010cf9.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/image_1.6f949393.png\";","export default __webpack_public_path__ + \"static/media/image_2.29257926.png\";","import styled from 'styled-components'\r\n\r\nconst Image = styled.img`\r\n    width: 35px;\r\n    height: 52px;\r\n    margin: 0 5px;\r\n    cursor:pointer;\r\n    -webkit-user-drag: none;\r\n`\r\nconst Thumbnail = ({ img, onClick }) => <Image src={img} onClick={onClick} />\r\n\r\nThumbnail.defaultProps = {\r\n    img: '',\r\n    onClick: () => { }\r\n}\r\nexport default Thumbnail\r\n","import Draggable from 'react-draggable';\r\nimport styled from 'styled-components';\r\nconst TextContainer = styled.div`\r\n    position: absolute;\r\n    top: 15%;\r\n    left: 32%;\r\n`\r\nconst EditableText = styled.div`\r\n    color: ${({theme})=>theme.colors.white};\r\n    width: fit-content;    \r\n    font-size: ${({ zoom }) => (16 + zoom) > 1 ? (16 + zoom) : 1}px;\r\n    transform: rotate(${({ rotate }) => rotate}deg);\r\n    &:focus{\r\n        background: ${({theme})=>theme.colors.white};\r\n        color: ${({theme})=>theme.colors.black};\r\n        border: none;\r\n        outline:none;\r\n    }\r\n`\r\nconst DraggableText = ({ index, title, zoom, rotate, setActiveItem }) => {\r\n    return (\r\n        <Draggable bounds=\"parent\">\r\n            <TextContainer>\r\n                <EditableText\r\n                    contentEditable\r\n                    suppressContentEditableWarning \r\n                    zoom={zoom}\r\n                    rotate={rotate}\r\n                    onClick={() => setActiveItem(index)}>{title}</EditableText>\r\n            </TextContainer>\r\n        </Draggable>\r\n    )\r\n}\r\n\r\nexport default DraggableText\r\n","import styled from 'styled-components'\r\nimport pic1 from 'assets/images/image_1.png'\r\nimport pic2 from 'assets/images/image_2.png'\r\nimport Thumbnail from 'components/Thumbnail/Thumbnail'\r\nimport { useState } from 'react'\r\nimport DraggableText from 'components/DraggableText/DraggableText'\r\nconst Container = styled.div`\r\n    width: 607px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n`\r\nconst ImageContainer = styled.div`\r\n    position: relative;\r\n`\r\nconst Image = styled.img`\r\n    margin-top: 10px;\r\n    -webkit-user-drag: none;\r\n`\r\nconst ImageList = styled.div`\r\n    display:flex;\r\n    align-items:center;\r\n    justify-content:center;\r\n`\r\nconst images = [pic1, pic2]\r\nconst PosterViewer = ({ texts, setActiveItem }) => {\r\n    const [activeImage, setActiveImage] = useState(images[0]);\r\n    return (\r\n        <Container>\r\n            <ImageContainer>\r\n                <Image src={activeImage} />\r\n                {texts.map(({ title, zoom, rotate }, i) =><DraggableText key={i} index={i} title={title} zoom={zoom} rotate={rotate} setActiveItem={setActiveItem}/> )}\r\n            </ImageContainer>\r\n            <ImageList>\r\n                {images.map((img, i) => <Thumbnail key={i} img={img} onClick={() => setActiveImage(img)} />)}\r\n            </ImageList>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default PosterViewer\r\n","export const staticText = {\r\n    newText: 'New Text...',\r\n    newTextBlock: 'new text block',\r\n    zoomIn: 'zoom in',\r\n    zoomOut: 'zoom out',\r\n    rotate: 'rotate'\r\n}","import styled from 'styled-components'\r\n\r\nconst BtnContainer = styled.div`\r\n    background: ${({ theme }) => theme.colors.blue};\r\n    min-width: 108px;\r\n    height: 30px;\r\n    padding: 10px;\r\n    box-sizing: border-box;\r\n    text-transform: uppercase;\r\n    display:flex;\r\n    align-items:center;\r\n    justify-content:center;\r\n    width: fit-content;\r\n    color:white;\r\n    margin: 5px 0;\r\n    font-size: 10px;\r\n    line-height: 12px;\r\n    cursor: pointer;\r\n    user-select: none;\r\n`\r\nconst Button = ({ title, onClick }) => {\r\n    return (\r\n        <BtnContainer onClick={onClick}>\r\n            {title}\r\n        </BtnContainer>\r\n    )\r\n}\r\nButton.defaultProps = {\r\n    title: 'button title',\r\n    onClick: () => { }\r\n}\r\n\r\nexport default Button\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { staticText } from '../../constants/resource'\r\nimport Button from '../Button/Button'\r\n\r\nconst Container = styled.div`\r\n    padding: 50px;\r\n    border-left: 1px solid ${({theme})=>theme.colors.borderGrey};\r\n`\r\nconst ButtonList = ({ addText, zoomIn, zoomOut, rotate }) => {\r\n    const actionButtons = [\r\n        { title: staticText.newTextBlock, onClick: addText },\r\n        { title: staticText.zoomIn, onClick: zoomIn },\r\n        { title: staticText.zoomOut, onClick: zoomOut },\r\n        { title: staticText.rotate, onClick: rotate },\r\n    ]\r\n    return (\r\n        <Container>\r\n            {actionButtons.map(({ title, onClick }, i) => <Button key={i} title={title} onClick={onClick} />)}\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default ButtonList\r\n","import React, { useState } from 'react'\r\nimport PosterViewer from 'components/PosterViewer/PosterViewer'\r\nimport styled from 'styled-components'\r\nimport ButtonList from '../components/ButtonList/ButtonList'\r\nimport { staticText } from '../constants/resource'\r\nconst Container = styled.div`\r\n    padding: 20px;\r\n    display: flex;\r\n`\r\nconst rotationValue = 90;\r\nconst maxRotationValue = 360;\r\nconst zoomValue = 1;\r\nconst PosterEditor = () => {\r\n    const [texts, setTexts] = useState([]);\r\n    const [activeItem, setActiveItem] = useState(null);\r\n    const addText = () => {\r\n        if(!texts.length) setActiveItem(0)\r\n        setTexts(prev => [...prev, { title: staticText.newText, zoom: 0, rotate: 0 }])\r\n    }\r\n    const changeZoom = (value) => {\r\n        let payload = [...texts]\r\n        if (payload[activeItem]) {\r\n            payload[activeItem].zoom += value\r\n            setTexts(payload)\r\n        }\r\n    }\r\n    const rotate = () => {\r\n        let payload = [...texts]\r\n        if (payload[activeItem]) {\r\n            payload[activeItem].rotate += rotationValue;\r\n            if (payload[activeItem].rotate >= maxRotationValue) payload[activeItem].rotate = 0\r\n            setTexts(payload)\r\n        }\r\n    }\r\n    return (\r\n        <Container>\r\n            <PosterViewer texts={texts} setActiveItem={setActiveItem} />\r\n            <ButtonList addText={addText} zoomIn={() => changeZoom(zoomValue)} zoomOut={() => changeZoom(-zoomValue)} rotate={rotate} />\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default PosterEditor\r\n","export const theme = {\r\n    colors: {\r\n        blue: '#63ABFF',\r\n        borderGrey:'#D2D2D2',\r\n        black: '#000',\r\n        white: '#fff'\r\n    }\r\n}","import PosterEditor from 'pages/PosterEditor';\nimport styled, { ThemeProvider } from 'styled-components';\nimport { theme } from './theme';\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <Container>\n        <PosterEditor />\n      </Container>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}